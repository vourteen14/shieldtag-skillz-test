version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    container_name: shieldtag-frontend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - shieldtag-network
    restart: unless-stopped
    command: npm run dev

  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shieldtag-migrate-dev
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=794eaf3343916929928148b7b9944fee
      - JWT_REFRESH_SECRET=794eaf3343916929928148b7b9944fee
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=backend
      - DB_USER=postgres
      - DB_PASSWORD=81be1f61f552709
      - FRONTEND_URL=${FRONEND_URL}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shieldtag-network
    restart: "no"
    command: npm run db:migrate

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shieldtag-backend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=794eaf3343916929928148b7b9944fee
      - JWT_REFRESH_SECRET=794eaf3343916929928148b7b9944fee
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=backend
      - DB_USER=postgres
      - DB_PASSWORD=81be1f61f552709
      - FRONTEND_URL=${FRONEND_URL}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shieldtag-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: shieldtag-postgres-dev
    environment:
      POSTGRES_DB: backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 81be1f61f552709
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shieldtag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d backend"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: shieldtag-redis-dev
    volumes:
      - redis_data:/data
    networks:
      - shieldtag-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  shieldtag-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
